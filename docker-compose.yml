#
# Welcome to Magento 2 Docker Configuration
#  _ __ ___   __ _  __ _  ___ _ __ __  __
# | '_ ` _ \ / _` |/ _` |/ _ \ '_ \\ \/ /
# | | | | | | (_| | (_| |  __/ | | |>  < 
# |_| |_| |_|\__,_|\__, |\___|_| |_/_/\_\
#                   __/ |                
#                  |___/                 
#
# This config was created by magenx.com
# If you have any questions or need help
# please dont hesitate to contact us at:
#
# [admin email]: admin@magenx.com
# [website url]: https://www.magenx.com
#

# # ---------------------------------------------------------------------------------------------------------------------#
#  Configure logger driver
# # ---------------------------------------------------------------------------------------------------------------------#
x-logger: &logger
        logging:
            driver: syslog
            options:
                syslog-address: "unixgram:///dev/log"
                mode: non-blocking
                tag: "[ {{.Name}} ]"
                
# # ---------------------------------------------------------------------------------------------------------------------#
#  Configure ulimits
# # ---------------------------------------------------------------------------------------------------------------------#
x-ulimits: &ulimits
        ulimits:
            memlock:
               soft: -1
               hard: -1
            nofile:
               soft: 65536
               hard: 65536

# # ---------------------------------------------------------------------------------------------------------------------#
#  Configure capabilities
# # ---------------------------------------------------------------------------------------------------------------------#
x-cap_add: &cap_add
        cap_add:
            - SYS_PTRACE

services:
# # ---------------------------------------------------------------------------------------------------------------------#
#  MariaDB is a high performing open source relational database
# # ---------------------------------------------------------------------------------------------------------------------#
    mariadb:
        image: mariadb:${MARIADB_VERSION:-11.7}
        container_name: ${COOLIFY_CONTAINER_NAME:-mariadb}
        hostname: mariadb
        environment:
            MARIADB_AUTO_UPGRADE: ${MARIADB_AUTO_UPGRADE:-yes}
            MARIADB_DISABLE_UPGRADE_BACKUP: ${MARIADB_DISABLE_UPGRADE_BACKUP:-yes}
            MARIADB_RANDOM_ROOT_PASSWORD: ${MARIADB_RANDOM_ROOT_PASSWORD:-yes}
            MARIADB_DATABASE: ${MARIADB_DATABASE:-fitchs_magento2}
            MARIADB_USER: ${MARIADB_USER:-fitchs}
            MARIADB_PASSWORD: ${SERVICE_PASSWORD_MARIADB}
            TIMEZONE: ${TIMEZONE:-Australia/Perth}
        command: >
            --key_buffer_size=16M
            --myisam-recover-options=FORCE,BACKUP
            --innodb=force
            --max_allowed_packet=250M
            --max_connect_errors=100000
            --bind-address=mariadb
            --skip-name-resolve
            --back_log=20
            --interactive_timeout=7200
            --wait_timeout=7200
            --net_read_timeout=120
            --net_write_timeout=300
            --sort_buffer_size=1M
            --read_buffer_size=1M
            --read_rnd_buffer_size=1M
            --join_buffer_size=1M
            --tmp_table_size=128M
            --max_heap_table_size=128M
            --max_connections=150
            --thread_cache_size=32
            --thread_pool_size=16
            --open_files_limit=65535
            --table_definition_cache=4000
            --table_open_cache=4000
            --innodb_lock_wait_timeout=7200
            --innodb_flush_method=O_DIRECT
            --innodb_flush_log_at_trx_commit=2
            --innodb_log_file_size=128M
            --innodb_log_buffer_size=8M
            --innodb_file_per_table=1
            --innodb_read_io_threads=8
            --innodb_write_io_threads=8
            --innodb_buffer_pool_size=2G
            --log_error=/var/log/mysqld.log
            --skip-log-bin
            --disable-log-bin
        ports:
            - "127.0.0.1:3306:3306"
        restart: always
        volumes:
            - mariadb:/var/lib/mysql
        cpu_shares: 1024
        mem_limit: 2048m
        mem_reservation: 512m
        oom_kill_disable: true
        healthcheck:
            test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized", "--innodb_buffer_pool_loaded"]
            start_period: 10s
            interval: 10s
            timeout: 5s
            retries: 3
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  Opensearch is a powerful open source search and analytics engine
# # ---------------------------------------------------------------------------------------------------------------------#
    opensearch:
        build:
            context: ./opensearch
            args:
              OPENSEARCH_VERSION: ${OPENSEARCH_VERSION:-2.19.0}
        container_name: ${COOLIFY_CONTAINER_NAME:-opensearch}
        hostname: opensearch
        environment:
            cluster.name: ${BRAND:-fitchs}-cluster
            node.name: ${BRAND:-fitchs}-node1
            node.attr.rack: ${BRAND:-fitchs}-rack1
            discovery.type: single-node
            cluster.routing.allocation.enable: all
            index.number_of_replicas: 0
            bootstrap.memory_lock: true
            plugins.security.ssl.transport.enforce_hostname_verification: false
            plugins.security.ssl.http.enabled: false
            plugins.security.allow_unsafe_democertificates: true
            plugins.security.allow_default_init_securityindex: true
            OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
            OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${SERVICE_PASSWORD_OPENSEARCH}
        ports:
            - "127.0.0.1:9200:9200"
            - "127.0.0.1:9300:9300"
        restart: always
        volumes:
            - opensearch:/usr/share/opensearch/data
        cpu_shares: 1024
        mem_limit: 2048m
        mem_reservation: 512m
        oom_kill_disable: true
        healthcheck:
            test: ["CMD-SHELL", "curl -XGET -u admin:${SERVICE_PASSWORD_OPENSEARCH} 'http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=15s' || exit 1"]
            start_period: 15s
            interval: 15s
            timeout: 5s
            retries: 3
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  Redis is an open source key-value store that functions as a data structure server.
# # ---------------------------------------------------------------------------------------------------------------------#
    redis-cache:
        image: &redis_image redis:${REDIS_VERSION:-8.0}-alpine
        container_name: ${COOLIFY_CONTAINER_NAME:-redis-cache}
        hostname: redis-cache
        command: >
            --bind redis-cache
            --port 6380
            --save ""
            --loglevel warning
            --requirepass ${SERVICE_PASSWORD_REDIS}
            --maxmemory ${REDIS_CACHE_MEMORY:-1024mb}
            --maxmemory-policy allkeys-lru
            --lazyfree-lazy-eviction yes
            --lazyfree-lazy-expire yes
            --lazyfree-lazy-server-del yes
            --replica-lazy-flush yes
            --lazyfree-lazy-user-del yes
        ports:
            - "127.0.0.1:6380:6380"
        restart: always
        cpu_shares: 614
        mem_limit: 1024mb
        mem_reservation: 128m
        oom_kill_disable: true
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  Redis is an open source key-value store that functions as a data structure server.
# # ---------------------------------------------------------------------------------------------------------------------#
    redis-session:
        image: *redis_image
        container_name: ${COOLIFY_CONTAINER_NAME:-redis-session}
        hostname: redis-session
        command: >
            --bind redis-session
            --port 6379
            --save 300 15
            --requirepass ${SERVICE_PASSWORD_REDIS}
            --maxmemory ${REDIS_SESSION_MEMORY:-1024mb}
            --maxmemory-policy allkeys-lru
            --lazyfree-lazy-eviction yes
            --lazyfree-lazy-expire yes
            --lazyfree-lazy-server-del yes
            --replica-lazy-flush yes
            --lazyfree-lazy-user-del yes
        ports:
            - "127.0.0.1:6379:6379"
        restart: always
        volumes:
            - redis:/data
        cpu_shares: 614
        mem_limit: 1024mb
        mem_reservation: 128m
        oom_kill_disable: true
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  RabbitMQ is an open source multi-protocol messaging broker
# # ---------------------------------------------------------------------------------------------------------------------#                
    rabbitmq:
        image: rabbitmq:${RABBITMQ_VERSION:-4.1}-alpine
        container_name: ${COOLIFY_CONTAINER_NAME:-rabbitmq}
        hostname: rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: ${BRAND:-fitchs}
            RABBITMQ_DEFAULT_PASS: ${SERVICE_PASSWORD_RABBITMQ}
        restart: always
        ports:
            - "127.0.0.1:5672:5672"
        volumes:
            - rabbitmq:/var/lib/rabbitmq
        cpu_shares: 614
        mem_limit: 512m
        mem_reservation: 128m
        oom_kill_disable: true
        << : [*ulimits, *logger]
                
                
# # ---------------------------------------------------------------------------------------------------------------------#
#  Varnish is an HTTP accelerator designed for content-heavy dynamic web sites as well as APIs.
# # ---------------------------------------------------------------------------------------------------------------------#                  
    varnish:
        build:
            context: ./varnish
            args:
              VARNISH_VERSION: ${VARNISH_VERSION:-7.6}
              VARNISH_CACHE_SIZE: ${VARNISH_CACHE_SIZE:-1G}
              TIMEZONE: ${TIMEZONE:-Australia/Perth}
        container_name: ${COOLIFY_CONTAINER_NAME:-varnish}
        hostname: varnish
        restart: always
        depends_on:
            - nginx
            - php
        ports:
            - "127.0.0.1:8081:8081"
            - "127.0.0.1:6082:6082" 
        user: varnish
        cpu_shares: 614
        mem_limit: 1024m
        mem_reservation: 128m
        << : [*ulimits, *logger]

# # ---------------------------------------------------------------------------------------------------------------------#
#  Magento application code
# # ---------------------------------------------------------------------------------------------------------------------#  
    magento:
        image: alpine:${ALPINE_VERSION:-3.22}
        container_name: ${COOLIFY_CONTAINER_NAME:-magento}
        environment: &php_env
            MARIADB_DATABASE: ${MARIADB_DATABASE:-fitchs_magento2}
            MARIADB_USER: ${MARIADB_USER:-fitchs}
            MARIADB_PASSWORD: ${SERVICE_PASSWORD_MARIADB}
            REDIS_PASSWORD: ${SERVICE_PASSWORD_REDIS}
            INDEXER_PASSWORD: ${SERVICE_PASSWORD_INDEXER}
            DOMAIN: ${DOMAIN:-fitchs.au}
            ADMIN_PATH: ${ADMIN_PATH:-admin_4ddywu1}
            CRYPT_KEY: ${CRYPT_KEY:-810658.4c87cc44acc5adc748299ceeb0}
            RABBITMQ_PASSWORD: ${SERVICE_PASSWORD_RABBITMQ}
            BRAND: ${BRAND:-fitchs}
        volumes:
            - magento:${ROOT_PATH:-/home/fitchs}
            - media:${ROOT_PATH:-/home/fitchs}/shared/pub/media
            - var:${ROOT_PATH:-/home/fitchs}/shared/var
        user: "${BRAND:-fitchs}"
        working_dir: "${ROOT_PATH:-/home/fitchs}/current"
        entrypoint: ["/entrypoint.sh"]
        cpu_shares: 614
        mem_limit: 512m
        mem_reservation: 128m
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  Configure container to run php and php-fpm
# # ---------------------------------------------------------------------------------------------------------------------#    
    php:
        build:
            context: ./php
            args:
              BRAND: ${BRAND:-fitchs}
              DOMAIN: ${DOMAIN:-fitchs.au}
              PHP_USER: ${PHP_USER:-php-fitchs}
              ADMIN_PATH: ${ADMIN_PATH:-admin_4ddywu1}
              ROOT_PATH: ${ROOT_PATH:-/home/fitchs}
              PHP_VERSION: ${PHP_VERSION:-8.4}
              TIMEZONE: ${TIMEZONE:-Australia/Perth}
              MAGENTO_GITHUB_REPO: ${MAGENTO_GITHUB_REPO:-magento/magento2}
              MAGENTO_GITHUB_BRANCH: ${MAGENTO_GITHUB_BRANCH:-2.4-8}
              ALPINE_VERSION: ${ALPINE_VERSION:-3.22}
        image: fitchs-php
        container_name: ${COOLIFY_CONTAINER_NAME:-php}
        environment: *php_env
        hostname: php
        restart: always
        depends_on:
            mariadb:
                condition: service_healthy
        ports:
            - "127.0.0.1:9000:9000"
        volumes:
            - magento:${ROOT_PATH:-/home/fitchs}:ro
            - media:${ROOT_PATH:-/home/fitchs}/shared/pub/media:rw
            - var:${ROOT_PATH:-/home/fitchs}/shared/var:rw
        user: ${PHP_USER:-php-fitchs}
        working_dir: "${ROOT_PATH:-/home/fitchs}/current"
        entrypoint: ["php-fpm${PHP_VERSION:-8.4}", "-F"]
        cpu_shares: 1024
        mem_limit: 2048m
        mem_reservation: 512m
        << : [*ulimits, *cap_add, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  Nginx is an open source reverse proxy server for HTTP, HTTPS
# # ---------------------------------------------------------------------------------------------------------------------#                   
    nginx:
        build:
            context: ./nginx
            args:
              BRAND: ${BRAND:-fitchs}
              DOMAIN: ${DOMAIN:-fitchs.au}
              PHP_USER: ${PHP_USER:-php-fitchs}
              ADMIN_PATH: ${ADMIN_PATH:-admin_4ddywu1}
              ROOT_PATH: ${ROOT_PATH:-/home/fitchs}
              PHP_VERSION: ${PHP_VERSION:-8.4}
              TIMEZONE: ${TIMEZONE:-Australia/Perth}
              MAGENTO_GITHUB_REPO: ${MAGENTO_GITHUB_REPO:-magento/magento2}
              MAGENTO_GITHUB_BRANCH: ${MAGENTO_GITHUB_BRANCH:-2.4-8}
        container_name: ${COOLIFY_CONTAINER_NAME:-nginx}
        hostname: nginx
        restart: always
        depends_on:
            mariadb:
                condition: service_healthy
            php:
                condition: service_started
        ports:
            - "80:80"
            - "443:443"
            - "127.0.0.1:8080:8080"
        volumes:
            - magento:${ROOT_PATH:-/home/fitchs}:ro
            - media:${ROOT_PATH:-/home/fitchs}/shared/pub/media:ro
            - var:${ROOT_PATH:-/home/fitchs}/shared/var:ro
            - ssl:/etc/ssl
            - certbot:/etc/letsencrypt:ro
            - phpmyadmin:/var/www/html:ro
        working_dir: ${ROOT_PATH:-/home/fitchs}/current
        user: ${BRAND:-fitchs}
        cpu_shares: 614
        mem_limit: 512m
        mem_reservation: 128m
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#   Composer is a dependency manager written in and for PHP
# # ---------------------------------------------------------------------------------------------------------------------# 
    composer:
        image: composer:${COMPOSER_VERSION:-2.8}
        container_name: ${COOLIFY_CONTAINER_NAME:-composer}
        environment:
            COMPOSER_AUTH: |
              {
                "http-basic": {
                  "repo.magento.com": {
                    "username": "${COMPOSER_USER:-c745c9e53934ec9f727a99ae6c487277}",
                    "password": "${COMPOSER_PASSWORD:-137b0169b389c191fd3a63544bee6e4d}"
                  }
                }
              }
        volumes:
            - magento:${ROOT_PATH:-/home/fitchs}:rw
            - media:${ROOT_PATH:-/home/fitchs}/shared/pub/media:rw
            - var:${ROOT_PATH:-/home/fitchs}/shared/var:rw
        user: ${BRAND:-fitchs}
        working_dir: "${ROOT_PATH:-/home/fitchs}/current/"
        entrypoint: ["composer"]
        cpu_shares: 1024
        mem_limit: 1024m
        mem_reservation: 512m
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  phpMyAdmin - A web interface for MariaDB
# # ---------------------------------------------------------------------------------------------------------------------#  
    phpmyadmin:
        image: phpmyadmin:fpm-alpine
        container_name: ${COOLIFY_CONTAINER_NAME:-phpmyadmin}
        hostname: phpmyadmin
        environment:
            PMA_ARBITRARY: ${PMA_ARBITRARY:-1}
            HIDE_PHP_VERSION: ${HIDE_PHP_VERSION:-true}
            PMA_HOST: ${PMA_HOST:-mariadb}
            PMA_PORT: ${PMA_PORT:-3306}
            MAX_EXECUTION_TIME: ${MAX_EXECUTION_TIME:-3600}
            MEMORY_LIMIT: ${MEMORY_LIMIT:-2G}
            UPLOAD_LIMIT: ${UPLOAD_LIMIT:-250M}
            PMA_PMADB: ${PMA_PMADB:-fitchs_phpmyadmin}
            PMA_CONTROLUSER: ${PMA_CONTROLUSER:-fitchs_phpmyadmin}
            PMA_CONTROLPASS: ${SERVICE_PASSWORD_MARIADB}
            TIMEZONE: ${TIMEZONE:-Australia/Perth}
        restart: always
        depends_on:
            mariadb:
                condition: service_healthy
            nginx:
                condition: service_started
        ports:
            - "127.0.0.1:9001:9001"
        volumes:
            - phpmyadmin:/var/www/html
        cpu_shares: 614
        mem_limit: 512m
        mem_reservation: 512m
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#   Certbot tool for obtaining TLS/SSL certificates from Let's Encrypt
# # ---------------------------------------------------------------------------------------------------------------------#           
    certbot:
        image: certbot/certbot:latest
        container_name: ${COOLIFY_CONTAINER_NAME:-certbot}
        volumes:
            - magento:${ROOT_PATH:-/home/fitchs}/current/pub/.well-known/acme-challenge/:rw
            - certbot:/etc/letsencrypt
            - certbotlib:/var/lib/letsencrypt
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#   Cron job scheduler run arbitrary commands, or "jobs", according to a schedule
# # ---------------------------------------------------------------------------------------------------------------------# 
    cron:
        build:
            context: ./php
            args:
              BRAND: ${BRAND:-fitchs}
              DOMAIN: ${DOMAIN:-fitchs.au}
              PHP_USER: ${PHP_USER:-php-fitchs}
              ADMIN_PATH: ${ADMIN_PATH:-admin_4ddywu1}
              ROOT_PATH: ${ROOT_PATH:-/home/fitchs}
              PHP_VERSION: ${PHP_VERSION:-8.4}
              TIMEZONE: ${TIMEZONE:-Australia/Perth}
              MAGENTO_GITHUB_REPO: ${MAGENTO_GITHUB_REPO:-magento/magento2}
              MAGENTO_GITHUB_BRANCH: ${MAGENTO_GITHUB_BRANCH:-2.4-8}
              ALPINE_VERSION: ${ALPINE_VERSION:-3.22}
        container_name: ${COOLIFY_CONTAINER_NAME:-cron}
        environment: *php_env
        depends_on:
            mariadb:
                condition: service_healthy
            php:
                condition: service_started
        volumes:
            - magento:${ROOT_PATH:-/home/fitchs}:ro
            - media:${ROOT_PATH:-/home/fitchs}/shared/pub/media:ro
            - var:${ROOT_PATH:-/home/fitchs}/shared/var:rw
        user: ${PHP_USER:-php-fitchs}
        working_dir: "${ROOT_PATH:-/home/fitchs}/current/"
        command: ["crond", "-f"]
        cpu_shares: 1024
        mem_limit: 2048m
        mem_reservation: 512m
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#   Named volumes list
# # ---------------------------------------------------------------------------------------------------------------------#            
volumes:
    ssl:
    mariadb:
    phpmyadmin:
    opensearch:
    redis:
    rabbitmq:
    certbot:
    certbotlib:
    magento:
    media:
    var:


# # ---------------------------------------------------------------------------------------------------------------------#
#   Named networks list
# # ---------------------------------------------------------------------------------------------------------------------# 
networks:
    default:
        name: ${BRAND:-fitchs}

