#
# Welcome to Magento 2 Docker Configuration
#  _ __ ___   __ _  __ _  ___ _ __ __  __
# | '_ ` _ \ / _` |/ _` |/ _ \ '_ \\ \/ /
# | | | | | | (_| | (_| |  __/ | | |>  < 
# |_| |_| |_|\__,_|\__, |\___|_| |_/_/\_\
#                   __/ |                
#                  |___/                 
#
# This config was created by magenx.com
# If you have any questions or need help
# please dont hesitate to contact us at:
#
# [admin email]: admin@magenx.com
# [website url]: https://www.magenx.com
#


version: '3.8'

x-appsetargs: &appsetargs
    - BRAND=${BRAND}
    - DOMAIN=${DOMAIN}
    - PHP_USER=${PHP_USER}
    - ROOT_PATH=${ROOT_PATH}
    - APP_ROOT_PATH=${APP_ROOT_PATH}
    - WEB_ROOT_PATH=${WEB_ROOT_PATH}
    - TIMEZONE=${TIMEZONE}

services:

    mariadb:
#        build:
#            context: ./mariadb
#            args:
#                -
        image: mariadb:10.5.12-focal
        container_name: ${BRAND}-mariadb
        environment:
            - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
            - MARIADB_DATABASE=${MARIADB_DATABASE}
            - MARIADB_USER=${MARIADB_USER}
            - MARIADB_PASSWORD=${MARIADB_PASSWORD}
            - TZ=${TIMEZONE}
        ports:
            - "127.0.0.1:3306:3306"
        restart: always
        ulimits:
            memlock:
                soft: -1
                hard: -1
            nofile:
                soft: 65536
                hard: 65536
        volumes:
            - mariadb:/var/lib/mysql
        logging:
            driver: syslog
            options:
                syslog-address: "unixgram:///dev/log"
                tag: "[ {{.Name}} ]"



    elasticsearch:
        build:
            context: ./elasticsearch
        container_name: ${BRAND}-elasticsearch
        environment:
            - cluster.name=magento
            - node.name=magento-node1
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - cluster.routing.allocation.disk.threshold_enabled=false
            - index.blocks.read_only_allow_delete
        ports:
            - "127.0.0.1:9200:9200"
            - "127.0.0.1:9300:9300"
        restart: always
        ulimits:
            memlock:
                soft: -1
                hard: -1
            nofile:
                soft: 65536
                hard: 65536
        volumes:
            - elasticsearch:/usr/share/elasticsearch/data
        logging:
            driver: syslog
            options:
                syslog-address: "unixgram:///dev/log"
                tag: "[ {{.Name}} ]"



    redis:
        image: redis:6.2.6-alpine
        container_name: ${BRAND}-redis
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "127.0.0.1:6379:6379"            
        logging:
            driver: syslog
            options:
                syslog-address: "unixgram:///dev/log"
                tag: "[ {{.Name}} ]"             


                
    rabbitmq:
        image: rabbitmq:3.8-alpine
        container_name: ${BRAND}-rabbitmq
        restart: always
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "127.0.0.1:5672:5672"           
        logging:
            driver: syslog
            options:
                syslog-address: "unixgram:///dev/log"
                tag: "[ {{.Name}} ]"
                
                
                
    varnish:
        image: varnish:6.6.1-alpine
        container_name: ${BRAND}-varnish
        restart: always
        depends_on:
            - nginx
            - php
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "127.0.0.1:8081:8081"
            - "127.0.0.1:6082:6082" 
        volumes:
            - varnish:/etc/varnish
        logging:
            driver: syslog
            options:
                syslog-address: "unixgram:///dev/log"
                tag: "[ {{.Name}} ]"
    
    
    
    php:
        build:
            context: ./php
            args: *appsetargs
        container_name: ${BRAND}-php
        restart: always
        depends_on:
            - mariadb
            - redis
            - rabbitmq
            - elasticsearch
        ports:
            - "127.0.0.1:9000:9000"
        volumes:
            - app:${ROOT_PATH}
            - varnish:/etc/varnish
            - phpmyadmin:/usr/share/phpmyadmin
        working_dir: ${WEB_ROOT_PATH}
        entrypoint: php-fpm7 -F
        logging:
            driver: syslog
            options:
                syslog-address: "unixgram:///dev/log"
                tag: "[ {{.Name}} ]"
                
                
                
    nginx:
        build:
            context: ./nginx
            args: *appsetargs
        container_name: ${BRAND}-nginx
        restart: always
        depends_on:
            - mariadb
            - php
            - redis
            - rabbitmq
            - elasticsearch
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - app:${ROOT_PATH}
            - ssl:/etc/ssl
            - nginx:/etc/nginx
            - certbot:/etc/letsencrypt
            - phpmyadmin:/usr/share/phpmyadmin
        working_dir: ${WEB_ROOT_PATH}
        logging:
            driver: syslog
            options:
                syslog-address: "unixgram:///dev/log"
                tag: "[ {{.Name}} ]"
 
 
 
    phpmyadmin:
        image: phpmyadmin:fpm-alpine
        container_name: ${BRAND}-phpmyadmin
        environment:
            - PMA_HOST="mariadb"
            - PMA_PORT="3306" 
        restart: always
        depends_on:
            - mariadb
            - nginx
        volumes:
            - phpmyadmin:/var/www/html
        logging:
            driver: syslog
            options:
                syslog-address: "unixgram:///dev/log"
                tag: "[ {{.Name}} ]"
            
            
            
    certbot:
        image: certbot/certbot:latest
        container_name: ${BRAND}-certbot
        restart: always
        depends_on:
            - nginx
        volumes:
            - certbot:/etc/letsencrypt
        working_dir: ${WEB_ROOT_PATH}
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 7d & wait $${!}; done;'"
        logging:
            driver: syslog
            options:
                syslog-address: "unixgram:///dev/log"
                tag: "[ {{.Name}} ]"  



    composer:
        build:
            context: ./composer
            args: *appsetargs
        container_name: ${BRAND}-composer
        depends_on:
            - php
            - nginx
            - mariadb
        volumes:
            - app:${ROOT_PATH}
        working_dir: ${APP_ROOT_PATH}
        logging:
            driver: syslog
            options:
                syslog-address: "unixgram:///dev/log"
                tag: "[ {{.Name}} ]"            
            
            
volumes:
    app:
    ssl:
    mariadb:
    phpmyadmin:
    elasticsearch:
    certbot:
    nginx:
    varnish:



networks:
    default:
        name: ${BRAND}
